{"version":3,"sources":["../src/phone-input/index.js"],"names":[],"mappings":";;;;;;;;;;;;qBAAiC,OAAO;;;;0BACd,aAAa;;qBACa,OAAO;;0BACnC,cAAc;;;;QAE/B,oBAAoB;;IAEN,UAAU;cAAV,UAAU;;aAAV,UAAU;8BAAV,UAAU;;;;;AAAV,cAAU,WAgB3B,QAAQ,GAAA,kBAAC,KAAK,EAAE;YACJ,QAAQ,GAAK,IAAI,CAAC,KAAK,CAAvB,QAAQ;;AAChB,gBAAQ,CAAC,KAAK,CAAC,CAAA;KAClB;;AAnBgB,cAAU,WAqB3B,gBAAgB,GAAA,4BAAG;YACP,SAAS,GAAK,IAAI,CAAC,KAAK,CAAxB,SAAS;;AACjB,eAAO,SAAS,CAAC,GAAG,CAAC,UAAA,IAAI;mBAAI,CACzB,IAAI,CAAC,OAAO,EACZ,IAAI,CAAC,OAAO,EACZ,IAAI,CAAC,QAAQ,EACb,IAAI,CAAC,IAAI,CACZ;SAAA,CAAC,CAAA;KACL;;AA7BgB,cAAU,WA+B3B,MAAM,GAAA,kBAAG;qBACwC,IAAI,CAAC,KAAK;YAA/C,KAAK,UAAL,KAAK;YAAE,cAAc,UAAd,cAAc;YAAE,SAAS,UAAT,SAAS;;AACxC,eACI;;cAAK,SAAS,EAAE,SAAS,AAAC;YACtB;;kBAAK,SAAS,EAAC,uBAAuB;gBAClC;AACE,kCAAc,EAAE,cAAc,AAAC;AAC/B,yBAAK,EAAE,KAAK,AAAC;AACb,6BAAS,EAAE,IAAI,CAAC,gBAAgB,EAAE,AAAC;AACnC,4BAAQ,EAAI,IAAI,CAAC,QAAQ,MAAb,IAAI,CAAU;kBAC1B;aACA;SACJ,CACT;KACJ;;iBA7CgB,UAAU;;eAER,sBAAU;AACzB,qBAAS,EAAE,wBAAU;AACrB,iBAAK,YAAK;AACV,qBAAS,EAAE,YAAK,cAAO;AACnB,uBAAO,YAAK;AACZ,uBAAO,YAAK;AACZ,wBAAQ,YAAK;AACb,oBAAI,YAAK;aACZ,CAAC,CAAC;AACH,0BAAc,YAAK;AACnB,0BAAc,EAAE,wBAAU;AAC1B,oBAAQ,aAAM;SACjB,CAAC;;;;WAde,UAAU;;;qBAAV,UAAU","file":"index.js","sourcesContent":["import React, { Component } from 'react'\nimport { propTypes } from 'tcomb-react'\nimport { Str, Func, struct, list, maybe, Num } from 'tcomb'\nimport APhoneInput from './PhoneInput'\n\nimport './phone-input.styl'\n\nexport default class PhoneInput extends Component {\n\n    static propTypes = propTypes({\n        className: maybe(Str),\n        value: Str,\n        countries: list(struct({\n            country: Str,\n            isoCode: Str,\n            dialCode: Str,\n            mask: Str\n        })),\n        defaultCountry: Str,\n        maxPhoneLength: maybe(Num),\n        onChange: Func\n    })\n\n    onChange(value) {\n        const { onChange } = this.props\n        onChange(value)\n    }\n\n    getCountriesList() {\n        const { countries } = this.props\n        return countries.map(item => [\n            item.country,\n            item.isoCode,\n            item.dialCode,\n            item.mask\n        ])\n    }\n\n    render() {\n        const { value, defaultCountry, className } = this.props\n        return (\n            <div className={className}>\n                <div className=\"phone-input-container\">\n                    <APhoneInput\n                      defaultCountry={defaultCountry}\n                      value={value}\n                      countries={this.getCountriesList()}\n                      onChange={::this.onChange}\n                    />\n                </div>\n            </div>\n        )\n    }\n}\n"]}