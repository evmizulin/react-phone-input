{"version":3,"sources":["../src/phone-input/PhoneInput.js"],"names":[],"mappings":"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","file":"PhoneInput.js","sourcesContent":["// TODO - fix the onlyContries props. Currently expects that as an array of country object, but users should be able to send in array of country isos\n\nimport { some, reduce, map, filter, includes } from 'lodash/collection'\nimport findWhere from 'lodash.findwhere'\nimport { findIndex, tail } from 'lodash/array'\nimport first from 'lodash.first'\nimport { debounce, memoize } from 'lodash/function'\nimport { trim, startsWith } from 'lodash/string'\nimport React from 'react'\nimport ReactDOM from 'react-dom'\nimport classNames from 'classnames'\nimport {Overlay} from 'react-overlays'\nimport {findDOMNode} from 'react-dom'\nimport clone from 'clone'\n\nfunction nameSpace(allCountriesIn) {\n    const allCountries = clone(allCountriesIn)\n    const allCountryCodes = {}\n    const addCountryCode = function addingCountryCode(iso2, dialCode, priority) {\n        if (!(dialCode in allCountryCodes)) {\n            allCountryCodes[dialCode] = []\n        }\n        const index = priority || 0\n        allCountryCodes[dialCode][index] = iso2\n    }\n\n    for (let i = 0; i < allCountries.length; i++) {\n        const c = allCountries[i]\n        allCountries[i] = {\n            name: c[0],\n            iso2: c[1],\n            dialCode: c[2],\n            priority: c[4] || 0\n        }\n        if (c[3]) {\n            allCountries[i].format = c[3]\n        }\n        if (c[5]) {\n            allCountries[i].hasAreaCodes = true\n            for (let j = 0; j < c[5].length; j++) {\n                const dialCode = c[2] + c[5][j]\n                addCountryCode(c[1], dialCode)\n            }\n        }\n        addCountryCode(c[1], c[2], c[4])\n    }\n\n    return {\n        allCountries: allCountries,\n        allCountryCodes: allCountryCodes\n    }\n}\n\nlet countryData\nlet allCountries\n\nconst isModernBrowser = Boolean(document.createElement('input').setSelectionRange)\nconst keys = {\n    UP: 38,\n    DOWN: 40,\n    RIGHT: 39,\n    LEFT: 37,\n    ENTER: 13,\n    ESC: 27,\n    PLUS: 43,\n    A: 65,\n    Z: 90,\n    SPACE: 32\n}\n\nfunction isNumberValid(inputNumber) {\n    const countries = countryData.allCountries\n    return some(countries, function anonymousFunction1(country) {\n        return startsWith(inputNumber, country.dialCode) || startsWith(country.dialCode, inputNumber)\n    })\n}\n\nfunction getOnlyCountries(onlyCountriesArray) {\n    if (onlyCountriesArray.length === 0) {\n        return allCountries\n    }\n    const selectedCountries = []\n    allCountries.map(function anonymousFunction2(country) {\n        onlyCountriesArray.map(function anonymousFunction3(selCountry) {\n            if (country.iso2 === selCountry) {\n                selectedCountries.push(country)\n            }\n        })\n    })\n    return selectedCountries\n}\n\nfunction excludeCountries(selectedCountries, excludedCountries) {\n    if (excludedCountries.length === 0) {\n        return selectedCountries\n    }\n    const newSelectedCountries = filter(selectedCountries, function anonymousFunction4(selCountry) {\n        return !includes(excludedCountries, selCountry.iso2)\n    })\n    return newSelectedCountries\n}\n\nclass ReactPhoneInput extends React.Component {\n\n    constructor(props) {\n        super(props)\n        countryData = nameSpace(props.countries || [[ 'Россия', 'ru', '7' ]])\n        allCountries = countryData.allCountries\n        const inputNumber = this.props.value || ''\n        const onlyCountries = excludeCountries(getOnlyCountries(props.onlyCountries), props.excludeCountries)\n        const selectedCountryGuess = this.guessSelectedCountry(inputNumber.replace(/\\D/g, ''), onlyCountries)\n        const selectedCountryGuessIndex = findIndex(allCountries, selectedCountryGuess)\n        const formattedNumber = this.formatNumber(inputNumber.replace(/\\D/g, ''), selectedCountryGuess ? selectedCountryGuess.format : null)\n        const preferredCountries = filter(allCountries, function anonymousFunction5(country) {\n            return some(this.props.preferredCountries, function anonymousFunction6(preferredCountry) {\n                return preferredCountry === country.iso2\n            })\n        }.bind(this), this)\n\n        this.getNumber = this.getNumber.bind(this)\n        this.getValue = this.getValue.bind(this)\n        this.scrollTo = this.scrollTo.bind(this)\n        this.formatNumber = this.formatNumber.bind(this)\n        this._cursorToEnd = this._cursorToEnd.bind(this)\n        this.guessSelectedCountry = this.guessSelectedCountry.bind(this)\n        this.getElement = this.getElement.bind(this)\n        this.handleFlagDropdownClick = this.handleFlagDropdownClick.bind(this)\n        this.handleInput = this.handleInput.bind(this)\n        this.handleInputClick = this.handleInputClick.bind(this)\n        this.handleFlagItemClick = this.handleFlagItemClick.bind(this)\n        this.handleInputFocus = this.handleInputFocus.bind(this)\n        this._getHighlightCountryIndex = this._getHighlightCountryIndex.bind(this)\n        this._searchCountry = this._searchCountry.bind(this)\n        this.searchCountry = this.searchCountry.bind(this)\n        this.handleKeydown = this.handleKeydown.bind(this)\n        this.handleInputKeyDown = this.handleInputKeyDown.bind(this)\n        this.getCountryDropDownList = this.getCountryDropDownList.bind(this)\n\n        this.state = {\n            preferredCountries: preferredCountries,\n            selectedCountry: selectedCountryGuess,\n            highlightCountryIndex: selectedCountryGuessIndex,\n            formattedNumber: formattedNumber,\n            showDropDown: false,\n            queryString: '',\n            freezeSelection: false,\n            debouncedQueryStingSearcher: debounce(this.searchCountry, 100),\n            onlyCountries: onlyCountries\n        }\n    }\n\n    componentDidMount() {\n        document.addEventListener('keydown', this.handleKeydown)\n    }\n\n    componentWillUnmount() {\n        document.removeEventListener('keydown', this.handleKeydown)\n    }\n\n    getElement(index) {\n        return ReactDOM.findDOMNode(this.refs[`flag_no_${index}`])\n    }\n\n    getValue() {\n        return this.getNumber()\n    }\n\n    getNumber() {\n        return this.state.formattedNumber !== '+' ? this.state.formattedNumber : ''\n    }\n\n    getCountryDropDownList() {\n        const countryDropDownList = map(this.state.preferredCountries.concat(this.state.onlyCountries), function anonymousFunction10(country, index) {\n            const itemClasses = classNames({\n                country: true,\n                preferred: country.iso2 === 'us' || country.iso2 === 'gb',\n                active: country.iso2 === 'us',\n                highlight: this.state.highlightCountryIndex === index\n            })\n\n            const inputFlagClasses = `flag ${country.iso2}`\n\n            return (\n                <li\n                    ref={`flag_no_${index}`}\n                    key={`flag_no_${index}`}\n                    data-flag-key={`flag_no_${index}`}\n                    className={itemClasses}\n                    data-dial-code=\"1\"\n                    data-country-code={country.iso2}\n                    onClick={this.handleFlagItemClick.bind(this, country)}>\n                    <div className={inputFlagClasses} />\n                    <span className=\"country-name\">{country.name}</span>\n                    <span className=\"dial-code\">{'+' + country.dialCode}</span>\n                </li>\n            )\n        }.bind(this), this)\n\n        const dashedLi = (<li key={\"dashes\"} className=\"phone-input-divider\" />)\n        // let's insert a dashed line in between preffered countries and the rest\n        countryDropDownList.splice(this.state.preferredCountries.length, 0, dashedLi)\n\n        const dropDownClasses = classNames({\n            'country-list': true,\n            'hide': !this.state.showDropDown\n        })\n\n        return (\n            <ul ref=\"flagDropdownList\" className={dropDownClasses}>\n                {countryDropDownList}\n            </ul>\n        )\n    }\n\n    handleInputKeyDown(event) {\n        if (event.which === keys.ENTER) {\n            this.props.onEnterKeyPress(event)\n        }\n    }\n\n    handleKeydown(event) {\n        if (!this.state.showDropDown) {\n            return\n        }\n\n        // ie hack\n        if (event.preventDefault) {\n            event.preventDefault()\n        } else {\n            event.returnValue = false\n        }\n\n        const _moveHighlight = function __moveHighlight(direction) {\n            this.setState({\n                highlightCountryIndex: this._getHighlightCountryIndex(direction)\n            }, () => {\n                this.scrollTo(this.getElement(this.state.highlightCountryIndex), true)\n            })\n        }.bind(this)\n\n        switch (event.which) {\n            case keys.DOWN:\n                _moveHighlight(1)\n                break\n            case keys.UP:\n                _moveHighlight(-1)\n                break\n            case keys.ENTER:\n                this.handleFlagItemClick(this.state.onlyCountries[this.state.highlightCountryIndex], event)\n                break\n            case keys.ESC:\n                this.setState({showDropDown: false}, this._cursorToEnd)\n                break\n            default:\n                if ((event.which >= keys.A && event.which <= keys.Z) || event.which === keys.SPACE) {\n                    this.setState({\n                        queryString: this.state.queryString + String.fromCharCode(event.which)\n                    }, this.state.debouncedQueryStingSearcher)\n                }\n        }\n    }\n\n    searchCountry() {\n        const probableCandidate = this._searchCountry(this.state.queryString) || this.state.onlyCountries[0]\n        const probableCandidateIndex = findIndex(this.state.onlyCountries, probableCandidate) + this.state.preferredCountries.length\n\n        this.scrollTo(this.getElement(probableCandidateIndex), true)\n\n        this.setState({\n            queryString: '',\n            highlightCountryIndex: probableCandidateIndex\n        })\n    }\n\n    _getHighlightCountryIndex(direction) {\n        // had to write own function because underscore does not have findIndex. lodash has it\n        const highlightCountryIndex = this.state.highlightCountryIndex + direction\n\n        if (highlightCountryIndex < 0\n            || highlightCountryIndex >= (this.state.onlyCountries.length + this.state.preferredCountries.length)) {\n            return highlightCountryIndex - direction\n        }\n\n        return highlightCountryIndex\n    }\n\n    handleInputFocus() {\n        // if the input is blank, insert dial code of the selected country\n        if (ReactDOM.findDOMNode(this.refs.numberInput).value === '+') {\n            this.setState({formattedNumber: '+' + this.state.selectedCountry.dialCode})\n        }\n    }\n\n    handleFlagItemClick(country) {\n        const currentSelectedCountry = this.state.selectedCountry\n        const nextSelectedCountry = findWhere(this.state.onlyCountries, country)\n\n        if (currentSelectedCountry.iso2 !== nextSelectedCountry.iso2) {\n            // TODO - the below replacement is a bug. It will replace stuff from middle too\n            const newNumber = this.state.formattedNumber.replace(currentSelectedCountry.dialCode, nextSelectedCountry.dialCode)\n            const formattedNumber = this.formatNumber(newNumber.replace(/\\D/g, ''), nextSelectedCountry.format)\n\n            this.setState({\n                showDropDown: false,\n                selectedCountry: nextSelectedCountry,\n                freezeSelection: true,\n                formattedNumber: formattedNumber\n            }, function anonymousFunction9() {\n                this._cursorToEnd()\n                if (this.props.onChange) {\n                    this.props.onChange(formattedNumber)\n                }\n            })\n        }\n    }\n\n    handleInputClick() {\n        this.setState({showDropDown: false})\n    }\n\n    handleInput(event) {\n        let formattedNumber = '+'\n        let newSelectedCountry = this.state.selectedCountry\n        let freezeSelection = this.state.freezeSelection\n\n        // Does not exceed 16 digit phone number limit\n        if (event.target.value.replace(/\\D/g, '').length > 16) {\n            return\n        }\n\n        // if the input is the same as before, must be some special key like enter etc.\n        if (event.target.value === this.state.formattedNumber) {\n            return\n        }\n\n        // ie hack\n        if (event.preventDefault) {\n            event.preventDefault()\n        } else {\n            event.returnValue = false\n        }\n\n        if (event.target.value.length > 0) {\n            // before entering the number in new format, lets check if the dial code now matches some other country\n            const inputNumber = event.target.value.replace(/\\D/g, '')\n\n            // we don't need to send the whole number to guess the country... only the first 6 characters are enough\n            // the guess country function can then use memoization much more effectively since the set of input it gets has drastically reduced\n            if (!this.state.freezeSelection || this.state.selectedCountry.dialCode.length > inputNumber.length) {\n                newSelectedCountry = this.guessSelectedCountry(inputNumber.substring(0, 6), this.state.onlyCountries)\n                freezeSelection = false\n            }\n            // let us remove all non numerals from the input\n            formattedNumber = this.formatNumber(inputNumber, newSelectedCountry.format)\n        }\n\n        let caretPosition = event.target.selectionStart\n        const oldFormattedText = this.state.formattedNumber\n        const diff = formattedNumber.length - oldFormattedText.length\n\n        this.setState({\n            formattedNumber: formattedNumber,\n            freezeSelection: freezeSelection,\n            selectedCountry: newSelectedCountry.dialCode.length > 0 ? newSelectedCountry : this.state.selectedCountry\n        }, function anonymousFunction8() {\n            if (isModernBrowser) {\n                if (diff > 0) {\n                    caretPosition = caretPosition - diff\n                }\n\n                if (caretPosition > 0 && oldFormattedText.length >= formattedNumber.length) {\n                    ReactDOM.findDOMNode(this.refs.numberInput).setSelectionRange(caretPosition, caretPosition)\n                }\n            }\n\n            if (this.props.onChange) {\n                this.props.onChange(this.state.formattedNumber)\n            }\n        })\n    }\n\n    handleFlagDropdownClick() {\n        // need to put the highlight on the current selected country if the dropdown is going to open up\n        this.setState({\n            showDropDown: !this.state.showDropDown,\n            highlightCountry: findWhere(this.state.onlyCountries, this.state.selectedCountry),\n            highlightCountryIndex: findIndex(this.state.onlyCountries, this.state.selectedCountry)\n        }, () => {\n            if (this.state.showDropDown) {\n                this.scrollTo(this.getElement(this.state.highlightCountryIndex + this.state.preferredCountries.length))\n            }\n        })\n    }\n\n    // put the cursor to the end of the input (usually after a focus event)\n    _cursorToEnd() {\n        const input = ReactDOM.findDOMNode(this.refs.numberInput)\n        input.focus()\n        if (isModernBrowser) {\n            const len = input.value.length\n            input.setSelectionRange(len, len)\n        }\n    }\n\n    formatNumber(text, pattern) {\n        if (!text || text.length === 0) {\n            return '+'\n        }\n\n        // for all strings with length less than 3, just return it (1, 2 etc.)\n        // also return the same text if the selected country has no fixed format\n        if ((text && text.length < 2) || !pattern || !this.props.autoFormat) {\n            return `+${text}`\n        }\n\n        const formattedObject = reduce(pattern, function anonymousFunction7(acc, character) {\n            if (acc.remainingText.length === 0) {\n                return acc\n            }\n\n            if (character !== '.') {\n                return {\n                    formattedText: acc.formattedText + character,\n                    remainingText: acc.remainingText\n                }\n            }\n\n            return {\n                formattedText: acc.formattedText + first(acc.remainingText),\n                remainingText: tail(acc.remainingText)\n            }\n        }, {formattedText: '', remainingText: text.split('')})\n        return formattedObject.formattedText + formattedObject.remainingText.join('')\n    }\n\n    scrollTo(country, middle) {\n        if (!country) return\n\n        const container = ReactDOM.findDOMNode(this.refs.flagDropdownList)\n\n        if (!container) return\n\n        const containerHeight = container.offsetHeight\n        const containerOffset = container.getBoundingClientRect()\n        const containerTop = containerOffset.top + document.body.scrollTop\n        const containerBottom = containerTop + containerHeight\n\n        const element = country\n        const elementOffset = element.getBoundingClientRect()\n\n        const elementHeight = element.offsetHeight\n        const elementTop = elementOffset.top + document.body.scrollTop\n        const elementBottom = elementTop + elementHeight\n        let newScrollTop = elementTop - containerTop + container.scrollTop\n        const middleOffset = (containerHeight / 2) - (elementHeight / 2)\n\n        if (elementTop < containerTop) {\n            // scroll up\n            if (middle) {\n                newScrollTop -= middleOffset\n            }\n            container.scrollTop = newScrollTop\n        } else if (elementBottom > containerBottom) {\n            // scroll down\n            if (middle) {\n                newScrollTop += middleOffset\n            }\n            const heightDifference = containerHeight - elementHeight\n            container.scrollTop = newScrollTop - heightDifference\n        }\n    }\n\n    handleClickOutside() {\n        if (this.state.showDropDown) {\n            this.setState({\n                showDropDown: false\n            })\n        }\n    }\n\n    render() {\n        const arrowClasses = classNames({\n            'arrow': true,\n            'up': this.state.showDropDown\n        })\n        const inputClasses = classNames({\n            'form-control': true,\n            'invalid-number': !this.props.isValid(this.state.formattedNumber.replace(/\\D/g, ''))\n        })\n\n        const flagViewClasses = classNames({\n            'flag-dropdown': true,\n            'open-dropdown': this.state.showDropDown\n        })\n\n        const inputFlagClasses = `flag ${this.state.selectedCountry.iso2}`\n\n        return (\n            <div>\n                <input\n                    onChange={this.handleInput}\n                    onClick={this.handleInputClick}\n                    onFocus={this.handleInputFocus}\n                    onKeyDown={this.handleInputKeyDown}\n                    value={this.state.formattedNumber}\n                    ref=\"numberInput\"\n                    type=\"tel\"\n                    className={inputClasses}\n                    placeholder=\"+1 (702) 123-4567\"/>\n                <div ref=\"flagDropDownButton\" className={flagViewClasses} onKeyDown={this.handleKeydown} >\n                    <div ref=\"selectedFlag\" onClick={this.handleFlagDropdownClick} className=\"selected-flag\" title={`${this.state.selectedCountry.name}: + ${this.state.selectedCountry.dialCode}`}>\n                        <div className={inputFlagClasses}>\n                            <div className={arrowClasses}></div>\n                        </div>\n                    </div>\n                    <Overlay\n                        show={this.state.showDropDown}\n                        placement=\"bottom\"\n                        onHide={() => { this.setState({ showDropDown: false }) }}\n                        container={this}\n                        target={() => findDOMNode(this.refs.numberInput)}\n                        rootClose\n                        >\n                        {this.getCountryDropDownList()}\n                    </Overlay>\n                </div>\n            </div>\n        )\n    }\n}\nReactPhoneInput.prototype._searchCountry = memoize(function anonymousFunction11(queryString) {\n    if (!queryString || queryString.length === 0) {\n        return null\n    }\n    // don't include the preferred countries in search\n    const probableCountries = filter(this.state.onlyCountries, function anonymousFunction12(country) {\n        return startsWith(country.name.toLowerCase(), queryString.toLowerCase())\n    }, this)\n    return probableCountries[0]\n})\n\nReactPhoneInput.prototype.guessSelectedCountry = memoize(function anonymousFunction13(inputNumber, onlyCountries) {\n    const secondBestGuess = findWhere(allCountries, {iso2: this.props.defaultCountry}) || onlyCountries[0]\n    let bestGuess\n    if (trim(inputNumber) !== '') {\n        bestGuess = reduce(onlyCountries, function anonymousFunction14(selectedCountry, country) {\n            if (startsWith(inputNumber, country.dialCode)) {\n                if (country.dialCode.length > selectedCountry.dialCode.length) {\n                    return country\n                }\n                if (country.dialCode.length === selectedCountry.dialCode.length && country.priority < selectedCountry.priority) {\n                    return country\n                }\n            }\n\n            return selectedCountry\n        }, {dialCode: '', priority: 10001}, this)\n    } else {\n        return secondBestGuess\n    }\n\n    if (!bestGuess.name) {\n        return secondBestGuess\n    }\n\n    return bestGuess\n})\n\nReactPhoneInput.defaultProps = {\n    value: '',\n    autoFormat: true,\n    onlyCountries: [],\n    excludeCountries: [],\n    isValid: isNumberValid,\n    onEnterKeyPress: function emtyFunction() {}\n}\n\nReactPhoneInput.propTypes = {\n    value: React.PropTypes.string,\n    autoFormat: React.PropTypes.bool,\n    defaultCountry: React.PropTypes.string,\n    onlyCountries: React.PropTypes.arrayOf(React.PropTypes.string),\n    preferredCountries: React.PropTypes.arrayOf(React.PropTypes.string),\n    onChange: React.PropTypes.func\n}\n\nexport default ReactPhoneInput\n\n// React.render(\n//   <ReactPhoneInput defaultCountry={'us'} preferredCountries={['us', 'de']} excludeCountries={'in'}/>,\n//   document.getElementById('content'))\n"]}